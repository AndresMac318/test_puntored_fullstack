spring.application.name=apirest

spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver



spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true


server.servlet.context-path=/api/v1

# Clave secreta utilizada para firmar y verificar los tokens JWT. Debe mantenerse segura.
jwt.secret=${JWT_SECRET}

# Tiempo de validez de los tokens JWT en segundos (30 dias).
jwt.validity-in-seconds=2592000


# PUNTORED VARIABLES
apikey-puntored=${APIKEY_PUNTORED}
url-base-puntored=${URL_BASE}
user-puntored=${USER_PUNTORED}
password-puntored=${PASSWORD_PUNTORED}


#swagger configuration
reservation.openapi.dev-url=http://localhost:8080/api/v1
reservation.openapi.prod-url=https://restaurant-reservation-api-kv05.onrender.com/api/v1

#####################################################################